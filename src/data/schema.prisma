generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Adres {
  id         Int         @id @default(autoincrement()) @db.UnsignedInt
  straat     String      @db.VarChar(255)
  huisnummer String      @db.VarChar(50)
  stadsnaam  String      @db.VarChar(100)
  postcode   String      @db.VarChar(10)
  land       String      @db.VarChar(255)
  gebruikers Gebruiker[]

  @@map("adressen")
}

model Gebruiker {
  id            Int         @id @default(autoincrement()) @db.UnsignedInt
  adres_id      Int         @db.UnsignedInt
  naam          String      @db.VarChar(255)
  voornaam      String      @db.VarChar(255)
  geboortedatum DateTime    @db.DateTime(0)
  email         String      @unique @db.VarChar(255)
  wachtwoord    String      @db.VarChar(255)
  gsm           String      @db.VarChar(255)
  rol           String      @db.LongText
  status        Status
  Dashboard     Dashboard[]
  adres         Adres       @relation(fields: [adres_id], references: [id], onDelete: NoAction, map: "fk_adres_gebruiker")
  machines      Machine[]
  onderhouden   Onderhoud[]
  sites         Site[]

  @@index([adres_id], map: "fk_adres_gebruiker")
  @@map("gebruikers")
}

model KPI {
  id         Int         @id @default(autoincrement()) @db.UnsignedInt
  onderwerp  String
  roles      Json
  grafiek    Grafiek
  dashboards Dashboard[]
  kpiwaarden KPIWaarde[]

  @@map("kpis")
}

model KPIWaarde {
  id      Int      @id @default(autoincrement()) @db.UnsignedInt
  datum   DateTime
  waarde  Json
  site_id String?  @db.VarChar(50)
  kpi_id  Int      @db.UnsignedInt
  kpi     KPI      @relation(fields: [kpi_id], references: [id])

  @@unique([kpi_id, datum, site_id])
  @@map("kpiwaarden")
}

model Dashboard {
  id           Int       @id @default(autoincrement()) @db.UnsignedInt
  gebruiker_id Int       @db.UnsignedInt
  kpi_id       Int       @db.UnsignedInt
  kpi          KPI       @relation(fields: [kpi_id], references: [id], onDelete: Cascade)
  gebruiker    Gebruiker @relation(fields: [gebruiker_id], references: [id], onDelete: Cascade, map: "fk_gebruiker_dashboard")

  @@index([kpi_id], map: "dashboards_kpi_id_fkey")
  @@index([gebruiker_id], map: "fk_gebruiker_dashboard")
  @@map("dashboards")
}

model Site {
  id                   Int       @id @default(autoincrement()) @db.UnsignedInt
  naam                 String    @db.VarChar(255)
  verantwoordelijke_id Int       @db.UnsignedInt
  status               Status
  machines             Machine[]
  verantwoordelijke    Gebruiker @relation(fields: [verantwoordelijke_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_gebruiker_site")

  @@index([verantwoordelijke_id], map: "fk_gebruiker_site")
  @@map("sites")
}

model Product {
  id       Int       @id @default(autoincrement()) @db.UnsignedInt
  naam     String    @db.VarChar(255)
  machines Machine[]

  @@map("producten")
}

model Machine {
  id                      Int              @id @default(autoincrement()) @db.UnsignedInt
  site_id                 Int              @db.UnsignedInt
  product_id              Int              @db.UnsignedInt
  technieker_gebruiker_id Int              @db.UnsignedInt
  code                    String           @db.VarChar(255)
  locatie                 String           @db.VarChar(255)
  status                  Machine_Status
  productie_status        Productie_Status
  product_informatie      String           @db.VarChar(512)
  technieker              Gebruiker        @relation(fields: [technieker_gebruiker_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_gebruiker_machine")
  product                 Product          @relation(fields: [product_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_product_machine")
  site                    Site             @relation(fields: [site_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_site_machine")
  onderhouden             Onderhoud[]

  @@index([technieker_gebruiker_id], map: "fk_gebruiker_machine")
  @@index([product_id], map: "fk_product_machine")
  @@index([site_id], map: "fk_site_machine")
  @@map("machines")
}

model Onderhoud {
  id                      Int              @id @default(autoincrement()) @db.UnsignedInt
  machine_id              Int              @db.UnsignedInt
  technieker_gebruiker_id Int              @db.UnsignedInt
  datum                   DateTime         @db.DateTime(0)
  starttijdstip           DateTime         @db.DateTime(0)
  eindtijdstip            DateTime         @db.DateTime(0)
  reden                   String           @db.VarChar(255)
  status                  Onderhoud_Status
  opmerkingen             String           @db.VarChar(255)
  technieker              Gebruiker        @relation(fields: [technieker_gebruiker_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_gebruiker_onderhoud")
  machine                 Machine          @relation(fields: [machine_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_machine_onderhoud")

  @@index([technieker_gebruiker_id], map: "fk_gebruiker_onderhoud")
  @@index([machine_id], map: "fk_machine_onderhoud")
  @@map("onderhouden")
}

model Notificatie {
  id       Int      @id @default(autoincrement()) @db.UnsignedInt
  tijdstip DateTime @default(now())
  bericht  String   @db.VarChar(510)
  gelezen  Boolean  @default(false)

  @@map("notificaties")
}

enum Status {
  ACTIEF
  INACTIEF
}

enum Machine_Status {
  DRAAIT
  MANUEEL_GESTOPT
  AUTOMATISCH_GESTOPT
  IN_ONDERHOUD
  STARTBAAR
}

enum Productie_Status {
  GEZOND
  NOOD_ONDERHOUD
  FALEND
}

enum Onderhoud_Status {
  VOLTOOID
  IN_UITVOERING
  INGEPLAND
}

enum Grafiek {
  LINE
  BAR
  SINGLE
  LIST
  TOP5
  SITES
  TOP5OND
  AANKOND
  GEZONDHEID
  MACHLIST
}
